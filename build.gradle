plugins {
	id 'org.springframework.boot' version '2.7.2'
	id 'io.spring.dependency-management' version '1.0.12.RELEASE'
	id 'java'
}

group = 'com.project1'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.projectlombok:lombok:1.18.24'
	compileOnly 'org.projectlombok:lombok'
	implementation 'com.h2database:h2'
	runtimeOnly 'mysql:mysql-connector-java'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'

	// sql문 이쁘게보기
	implementation 'com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.8.0'

	// validation
	implementation 'org.springframework.boot:spring-boot-starter-validation'

	// 스프링 시큐리티
	implementation 'org.springframework.boot:spring-boot-starter-security'

	// jwt 관련 의존성
	implementation(group: 'io.jsonwebtoken', name: 'jjwt-api', version: '0.11.2')
	runtimeOnly(group: 'io.jsonwebtoken', name: 'jjwt-impl', version: '0.11.2')
	runtimeOnly(group: 'io.jsonwebtoken', name: 'jjwt-jackson', version: '0.11.2')

	// https://mvnrepository.com/artifact/org.json/json
	implementation group: 'org.json', name: 'json', version: '20160810'

	// 스웨거
	implementation "io.springfox:springfox-boot-starter:3.0.0"
	implementation "io.springfox:springfox-swagger-ui:3.0.0"

	//thymeleaf
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'

	// websocket stomp
	implementation 'org.springframework.boot:spring-boot-starter-websocket'
	implementation 'org.springframework.boot:spring-boot-starter-freemarker'
	implementation 'org.springframework.boot:spring-boot-devtools'
	implementation 'org.webjars.bower:bootstrap:5.1.3'
	implementation 'org.webjars.bower:vue:2.6.14'
	implementation 'org.webjars.bower:axios:0.21.1'
	implementation 'org.webjars:sockjs-client:1.5.1'
	implementation 'org.webjars:stomp-websocket:2.3.4'
	implementation 'com.google.code.gson:gson:2.9.0'

	// embedded-redis redis
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'
	implementation ('it.ozimov:embedded-redis:0.7.3')  { exclude group: "org.slf4j", module: "slf4j-simple" }

	// queryDsl
	implementation 'com.querydsl:querydsl-jpa'

	annotationProcessor 'org.projectlombok:lombok'
	annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jpa" // querydsl JPAAnnotationProcessor 사용 지정
	annotationProcessor("jakarta.persistence:jakarta.persistence-api")
	annotationProcessor("jakarta.annotation:jakarta.annotation-api")
}


def generated = "$buildDir/generated/querydsl"
sourceSets {
	main.java.srcDirs += [ generated ]
}
tasks.withType(JavaCompile) {
	options.annotationProcessorGeneratedSourcesDirectory = file(generated)
}

clean.doLast {
	file(generated).deleteDir()
}

test {
	useJUnitPlatform()
}